# SlickEdit generated file.  Do not edit this file except in designated areas.

# Make command to use for dependencies
MAKE=make
RM=rm
MKDIR=mkdir

# -----Begin user-editable area-----

# -----End user-editable area-----

# If no configuration is specified, "Debug" will be used
ifndef CFG
CFG=Debug
endif

#
# Configuration: Debug
#
ifeq "$(CFG)" "Debug"
OUTDIR=Debug
OUTFILE=$(OUTDIR)/libficsNetSyn.so
CFG_INC=-I/usr/local/include/zookeeper -I../include_com \
	-I../mds/journal 
CFG_LIB=
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/event.o $(OUTDIR)/log.o $(OUTDIR)/thread.o \
	$(OUTDIR)/zkadapter.o $(OUTDIR)/zoo_lock.o $(OUTDIR)/ficsNetSyn.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/event.o $(OUTDIR)/log.o $(OUTDIR)/thread.o \
	$(OUTDIR)/zkadapter.o $(OUTDIR)/zoo_lock.o $(OUTDIR)/ficsNetSyn.o 

COMPILE=g++ -c   -g -fPIC -o "$(OUTDIR)/$(*F).o" $(CFG_INC) $<
LINK=g++  -g -shared -fPIC -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : %.cpp
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : %.c
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.c
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.c
	$(COMPILE)

$(OUTDIR)/%.o : %.cc
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.cc
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.cc
	$(COMPILE)

# Build rules
all: $(OUTFILE)

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)
	-cp Debug/libficsNetSyn.so ../../bin
	-cp Debug/libficsNetSyn.so /usr/local/lib/libs

$(OUTDIR):
	$(MKDIR) -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	$(RM) -f $(OUTFILE)
	$(RM) -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif

#
# Configuration: Release
#
ifeq "$(CFG)" "Release"
OUTDIR=Release
OUTFILE=$(OUTDIR)/libficsNetSyn.so
CFG_INC=-I/usr/local/include/zookeeper -I../include_com \
	-I../mds/journal 
CFG_LIB=
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/event.o $(OUTDIR)/log.o $(OUTDIR)/thread.o \
	$(OUTDIR)/zkadapter.o $(OUTDIR)/zoo_lock.o $(OUTDIR)/ficsNetSyn.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/event.o $(OUTDIR)/log.o $(OUTDIR)/thread.o \
	$(OUTDIR)/zkadapter.o $(OUTDIR)/zoo_lock.o $(OUTDIR)/ficsNetSyn.o 

COMPILE=g++ -c   -fPIC -o "$(OUTDIR)/$(*F).o" $(CFG_INC) $<
LINK=g++  -shared -fPIC -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : %.cpp
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : %.c
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.c
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.c
	$(COMPILE)

$(OUTDIR)/%.o : %.cc
	$(COMPILE)

$(OUTDIR)/%.o : zkLock/%.cc
	$(COMPILE)

$(OUTDIR)/%.o : zkadapter/%.cc
	$(COMPILE)

# Build rules
all: $(OUTFILE)

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)
	-cp Debug/libficsNetSyn.so ../../bin
	-cp Debug/libficsNetSyn.so /usr/local/lib/libs

$(OUTDIR):
	$(MKDIR) -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	$(RM) -f $(OUTFILE)
	$(RM) -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif
